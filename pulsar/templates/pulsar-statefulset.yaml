apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-pulsar
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      app: pulsar
      release: {{ .Release.Name }}-pulsar
  serviceName: {{ .Release.Name }}-{{ .Values.pulsar.service.name }}
  replicas: 1
  template:
    metadata:
      labels:
        app: pulsar
        release: {{ .Release.Name }}-pulsar
    spec:
      serviceAccountName: {{ .Release.Name }}-pulsar
      terminationGracePeriodSeconds: 30
{{ if .Values.pulsar.tls.enabled }}
      initContainers:
      - name: waitfor
        image: ghcr.io/liangyuanpeng/waitfor:v1.0.0
        imagePullPolicy: IfNotPresent
        args:
        - --jobname 
        - {{ .Release.Name }}-ca
{{ end }}
      containers:
      - name: pulsar
        image: apachepulsar/pulsar:2.10.0
        imagePullPolicy: IfNotPresent
        command: ["sh","-c"]
{{ if .Values.pulsar.tls.enabled }}
        volumeMounts:
        - name: secret
          mountPath: /pulsar/secret
{{ end }}
        env:
        - name: PULSAR_PREFIX_tlsRequireTrustedClientCertOnConnect
          value: "true"
{{ if .Values.pulsar.tls.enabled }}
        - name: PULSAR_PREFIX_tlsCertificateFilePath
          value: /pulsar/secret/cert
        - name: PULSAR_PREFIX_tlsKeyFilePath
          value: /pulsar/secret/key
        - name: PULSAR_PREFIX_tlsTrustCertsFilePath
          value: /pulsar/secret/ca
        - name: PULSAR_PREFIX_webServicePortTls
          value: "8081"
        - name: PULSAR_PREFIX_brokerServicePortTls
          value: "6651"
{{ end }}
        args: ["bin/apply-config-from-env.py conf/client.conf && bin/apply-config-from-env.py conf/standalone.conf && bin/pulsar standalone -nfw -nss"]
        ports:
        - name: pulsar
          containerPort: 6650
        - name: admin
          containerPort: 8080
        - name: httpsadmin
          containerPort: 8081
      volumes:
      - name: configfile
        configMap:
          name:  {{ .Release.Name}}-pulsar
{{ if .Values.pulsar.tls.enabled }}
      - name: secret
        secret:
          secretName: {{ .Release.Name}}-pulsar
{{ end }}